# *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
#
# tedi http properties (inbound)
#
# *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

# server hostname
host=localhost

# server port to bind http to
port=8443

client.auth=false
compression=false

shutdown.max.wait.ms=600000

debug=true

# *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
# tls settings / mtls
# *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

# enable tls
tls=true

# set min version of TLS supported (tls1.0, tls1.2, tls1.3)
tls.min.version=tls1.2

# supported cipher suites (leave empty to accept golang defaults)
# e.g. TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
tls.cipher.suites=

# tls curve preferences (leave empty to accept golang defaults)
# e.g. CurveP256, CurveP384, CurveP521
tls.curve.preferences=

# https cert
# - default path is {root-dir}/keys
# - key must not be password protected
# - the cert file should include the full chain (leaf->intermediate->root)
tls.cert=simplehttp.pem
tls.key=simplehttp.key
tls.ca=simplehttp_ca.pem

# use ocsp as cert revocation
tls.ocsp=false
tls.ocsp.server=

# enable mtls
mtls.enabled=false



# *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
# log settings
# *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
# directory where logs are written
tlog.log.dir=/opt/tedi/logs

# base log file name (prefix)
tlog.log.base.file.name=http_access

# log file extension
tlog.log.base.file.ext=log

# enable/disable file logging
tlog.file.log.enabled=true

# write log to stdout
tlog.stdout.enabled=true

# enable log file rotation
tlog.rotate.log=true

# max log file size (uom=MB) before rotation (if enabled)
tlog.rotate.max.file.size=50

# logging level
# DEBG, INFO, WARN, EROR, FATL
tlog.level=info

tlog.pattern=""
